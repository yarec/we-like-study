CREATE DEFINER=`root`@`localhost` PROCEDURE `wls_glossary_test_simulate1UserDo1Level`(IN in_username VARCHAR(200) ,
	IN in_gLevel INT ,
	IN in_gSubject VARCHAR(200) ,
	IN in_accuracy FLOAT)
BEGIN
	DECLARE user_id INT;/*用户编号*/
	DECLARE subject_id_level VARCHAR(30);/*科目级别编号*/
	DECLARE glossary_level_money INT;/*关卡金币*/
	DECLARE glossary_level_passline INT;/*关卡分数线*/
	DECLARE timeDoThis DATETIME;

	/*在插入日志文件时需要使用*/
	DECLARE glossary_logs_id_word INT;
	DECLARE glossary_logs_word VARCHAR(50);
	DECLARE glossary_logs_translation VARCHAR(200);
	DECLARE glossary_logs_right INT;

	DECLARE temp_index INT;
	DECLARE tmpname varchar(20) default '' ;

	/*为了得到用户编号*/
	DECLARE user_id_c CURSOR
		FOR
		SELECT id FROM pre_wls_user WHERE username = in_username   ;
	
	/*为了得到科目编号*/
	DECLARE subject_id_level_c CURSOR
		FOR
		SELECT id_level FROM pre_wls_subject WHERE name = in_gSubject ;
	
	/*为了得到关卡金币和关卡分数线*/
	DECLARE glossary_level_c CURSOR
		FOR
		SELECT money,passline FROM pre_wls_glossary_levels WHERE subject = subject_id_level AND level = in_gLevel ;

	/*单词游标*/
	DECLARE glossary_c CURSOR
		FOR	
		SELECT id,word,translation FROM pre_wls_glossary WHERE subject = subject_id_level AND level = in_gLevel ;
		
	DECLARE CONTINUE HANDLER FOR SQLSTATE '02000' SET tmpname = null;

	/*根据用户名得到用户编号*/
	OPEN user_id_c;
		FETCH user_id_c INTO user_id;
	CLOSE user_id_c;

	/*根据科目名得到科目编号*/
	OPEN subject_id_level_c;
		FETCH subject_id_level_c INTO subject_id_level;
	CLOSE subject_id_level_c;

	/*用游标得到关卡金币跟分数线*/
	OPEN glossary_level_c;
		FETCH glossary_level_c INTO glossary_logs_id_word,glossary_level_passline;
	CLOSE glossary_level_c;
	
	SET timeDoThis = DATE_ADD(NOW(), INTERVAL ( (-1)*RAND()*( in_gLevel +1) - in_gLevel ) DAY);
	SET temp_index = 1;

	OPEN glossary_c;
	FETCH glossary_c INTO glossary_logs_id_word,glossary_logs_word,glossary_logs_translation;
		WHILE ( tmpname IS NOT NULL) DO
			IF RAND()>(in_accuracy/100) THEN
				SET glossary_logs_right = 1;
			ELSE
				SET glossary_logs_right = 0;
			END IF;
			CALL wls_glossary_logs_add(glossary_logs_id_word,user_id,timeDoThis,glossary_logs_right);
			FETCH glossary_c INTO glossary_logs_id_word,glossary_logs_word,glossary_logs_translation;
		END WHILE;
	CLOSE glossary_c;
END